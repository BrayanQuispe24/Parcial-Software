package {{packageBase}}.web;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

import {{packageBase}}.domain.{{name}};
import {{packageBase}}.service.{{name}}Service;

@RestController
@RequestMapping("/api/{{varName}}s")
public class {{name}}Controller {

    private final {{name}}Service service;

    public {{name}}Controller({{name}}Service service) {
        this.service = service;
    }

    @GetMapping
    public List<{{name}}> getAll() {
        return service.findAll();
    }

    @GetMapping("/{id}")
    public ResponseEntity<{{name}}> getById(@PathVariable Long id) {
        return service.findById(id)
                .map(ResponseEntity::ok)
                .orElse(ResponseEntity.notFound().build());
    }

    @PostMapping
    public {{name}} create(@RequestBody {{name}} entity) {
        return service.save(entity);
    }

    @PutMapping("/{id}")
    public ResponseEntity<{{name}}> update(@PathVariable Long id, @RequestBody {{name}} entity) {
        return service.findById(id)
                .map(existing -> {
                    entity.setId(id); // ðŸ”¹ asegura actualizaciÃ³n
                    return ResponseEntity.ok(service.save(entity));
                })
                .orElse(ResponseEntity.notFound().build());
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<?> delete(@PathVariable Long id) {
        return service.findById(id)
                .map(existing -> {
                    service.delete(id);
                    return ResponseEntity.noContent().build();
                })
                .orElse(ResponseEntity.notFound().build());
    }
}
