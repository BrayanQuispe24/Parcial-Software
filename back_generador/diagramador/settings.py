"""
Django settings for diagramador project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ["*"]

# ðŸ”‘ Secret key y debug
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY", "insecure-fallback")
# ðŸ”‘ Google Gemini API Key
GEMINI_API_KEY = os.environ.get("GEMINI_API_KEY", "")
# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "corsheaders",
    "colaborativo",
    "channels",
    "gemini_api",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]
CORS_ALLOWED_ORIGINS = [
    "http://localhost:4200",
    "http://angular-app:4000",
]
CORS_ALLOW_ALL_ORIGINS = True

ROOT_URLCONF = "diagramador.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "diagramador.wsgi.application"  # lo que utiliza daphne/uvicorn
ASGI_APPLICATION = "diagramador.asgi.application"  # lo que utiliza gunicorn

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "colaborativodb",
        "USER": "postgres",
        "PASSWORD": "071104",
        "HOST": "postgres",
        "PORT": "5432",
    }
    # Para docker
    #   'default': {
    #     'ENGINE': 'django.db.backends.postgresql',
    #     'NAME': 'colaborativodb',
    #     'USER': 'postgres',
    #     'PASSWORD': '071104',
    #     'HOST': 'postgres',
    #     'PORT': '5432'
    #     }
    # "default": {
    #     "ENGINE": "django.db.backends.postgresql",
    #     "NAME": os.environ.get("DB_NAME", "colaborativodb"),
    #     "USER": os.environ.get("DB_USER", "colaborativouser"),
    #     "PASSWORD": os.environ.get("DB_PASSWORD", "colaborativopass"),
    #     "HOST": os.environ.get("DB_HOST", "db"),
    #     "PORT": os.environ.get("DB_PORT", "5432"),
    # }
}


# Channels: Redis si hay REDIS_URL; si no, in-memory (solo dev)
REDIS_URL = os.environ.get("REDIS_URL")
if REDIS_URL:
    CHANNEL_LAYERS = {
        "default": {
            "BACKEND": "channels_redis.core.RedisChannelLayer",
            "CONFIG": {"hosts": [REDIS_URL]},
        }
    }
else:
    CHANNEL_LAYERS = {
        # se debe usar channels redis lo correcto en produccion
        "default": {"BACKEND": "channels.layers.InMemoryChannelLayer"}
    }
# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
